public class Lesson_66_SpringSecurityBegin {
    // Мы начинаем новый раздел для изучения, касается он безопасности.
    // Кратко обрисуем, что мы хотим сделать. Любая безопасность в организациях начинается с
    // доступов и ограничений. Представим, что мы работаем в крупной компании, где все зоны разделены,
    // есть бухгалтерия, столовая, кабинет менеджера и т.д. На входе в каждую зону стоит электронный
    // замок, его функция заключается в том, чтобы условный бухгалтер не мог попасть в серверную, а
    // сис админ не мог попасть в бухгалтерию. Реализуется это все картами доступа в которых
    // сохранены данные о работнике, а самое главное о его роли. Весь доступ завязан на этих
    // ролях. Гораздо удобнее назначить новому работнику роль, по которой он получает
    // доступ к определенным зонам, чем каждый раз изменять настройки доступа самой зоны, тем более
    // что у одного работника может быть более одной роли.
    // В Spring за это отвечает отдельный модуль Security. В ходе разработки нашего приложения
    // мы создадим форму авторизации с логином и паролем, настроим хранение паролей в зашифрованном
    // виде в БД, настроим разные роли, которым сделаем ограничения по выводимой информации, да и
    // просто немного больше узнаем про то, как должен работать специалист информационной
    // безопасности.

    // Приступим к настройке нашего проекта. Мы создали его на основе архетипа maven-webapp.
    // Теперь необходимо добавить зависимости.
    // Далее названия зависимостей: spring-webmvc, javax.servlet, Spring Security Web,
    // Spring Security Config. Пока этого достаточно. Теперь нам необходимо создать класс-конфигурацию.
    // Для этого мы, как всегда, создадим пакет service и в нем пакет configuration а в нем класс
    // MyConfig, перейдем в него.

}
